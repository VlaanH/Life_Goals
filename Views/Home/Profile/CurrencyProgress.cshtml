@using LifeGoals.Dbmanagement
@using LifeGoals.Cryptocurrencies
@using System.Globalization
@using System.Security.Claims
@model GoalObjects


@{

    var donateValueETH = Model.DonateValue + "ETH";
    bool isOwner  = false;

    if (User.Identity.IsAuthenticated == true)
    {
        var userId= User.FindFirstValue(ClaimTypes.NameIdentifier);  
        if (Model.User==userId)
            isOwner = true;
    }
  
}


    
@if (isOwner)
{
    <button class="donate_btn iconButton" onclick="SetQrPrivateKey('@Model.PrivateKey');showDialog()">
        <div class="currency_progress">
            <div class="currency_progress_line">
                <svg aria-hidden="true" focusable="false" class="currency_svg">
                    <use xlink:href="#ETH"/>
                </svg>
                <a class="value_progress" id="value_progress_@Model.Id"></a>
                <div class="progress">
                    <span class="progress-bar" id="progress-bar_@Model.Id" style=""></span>
                    <a class="progress_percent" id="progress_percent_@Model.Id">%</a>
                </div>
                <a class="value_progress">@donateValueETH</a>
            </div>
        </div>
    </button>
}
else
{
    <button class="donate_btn iconButton" onclick="SetQrAddress('@Model.PublicAddress');showDialog()">
        <div class="currency_progress">
            <div class="currency_progress_line">
                <svg aria-hidden="true" focusable="false" class="currency_svg">
                    <use xlink:href="#ETH"/>
                </svg>
                <a class="value_progress" id="value_progress_@Model.Id"></a>
                <div class="progress">
                    <span class="progress-bar" id="progress-bar_@Model.Id" style=""></span>
                    <a class="progress_percent" id="progress_percent_@Model.Id">%</a>
                    </div>
                <a class="value_progress">@donateValueETH</a>
            </div>
        </div>
    </button>
}
<script>
getETHBalance('@Model.PublicAddress','@Model.Id','@Model.DonateValue');
</script>